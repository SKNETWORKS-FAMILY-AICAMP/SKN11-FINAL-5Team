# 마케팅 에이전트 워크플로우 설정
# 사용자 제공 워크플로우 구조를 기반으로 작성

workflow:
  name: "marketing_automation_workflow"
  description: "마케팅 자동화 MCP 연동 워크플로우"
  version: "1.0.0"

# 1단계: 사용자 입력 해석
steps:
  - step: interpret-user-input
    type: llm
    client: gpt-4o
    description: "사용자의 요청을 분석해 마케팅 설명을 정리"
    prompt: >
      사용자의 요청을 분석해 마케팅 설명을 정리해줘.
      다음 요소들을 포함해서 분석해줘:
      - 제품/서비스의 핵심 가치
      - 타겟 고객층
      - 차별화 포인트
      - 마케팅 메시지 방향성
    input_schema:
      type: object
      properties:
        user_request:
          type: string
          description: "사용자의 마케팅 요청"
      required: ["user_request"]

  # 2단계: 플랫폼 선택
  - step: select-platform
    type: memory
    description: "마케팅할 플랫폼 선택"
    prompt: >
      어떤 플랫폼에 마케팅할까요? (instagram / naver-blog)
      
      Instagram:
      - 시각적 콘텐츠 중심
      - 젊은 층 타겟에 효과적
      - 해시태그 마케팅 활용
      
      Naver Blog:
      - 검색 최적화 효과적
      - 상세한 정보 전달 가능
      - 국내 검색 트래픽 높음
    options:
      - value: "instagram"
        label: "Instagram 📸"
        description: "시각적 마케팅, 해시태그 활용"
      - value: "naver-blog" 
        label: "Naver Blog 📝"
        description: "검색 최적화, 상세 정보 전달"

  # 3단계: 플랫폼별 마케팅 문맥 생성
  - step: get-marketing-context
    type: branch
    description: "선택된 플랫폼에 따른 분기 처리"
    branches:
      # Instagram 분기
      - when: "select-platform.output == 'instagram'"
        steps:
          - step: get-instagram-hashtags
            server: "@smithery-ai/hashtag-generator"
            tool: "generate_hashtags"
            description: "인스타그램용 해시태그 생성"
            input:
              query: "@interpret-user-input.output"
            
          - step: merge-instagram-context
            type: transform
            description: "해석된 요청과 해시태그 병합"
            input: >
              {{
                interpret-user-input.output + "\n\n[추천 해시태그]\n" + get-instagram-hashtags.output
              }}

      # Naver Blog 분기  
      - when: "select-platform.output == 'naver-blog'"
        steps:
          - step: get-naver-keywords
            server: "@smithery-ai/naver-search-mcp" 
            tool: "get_related_keywords"
            description: "네이버 연관 키워드 검색"
            input:
              query: "@interpret-user-input.output"
            
          - step: merge-blog-context
            type: transform
            description: "해석된 요청과 연관 키워드 병합"
            input: >
              {{
                interpret-user-input.output + "\n\n[연관 키워드]\n" + get-naver-keywords.output
              }}

  # 4단계: 콘텐츠 생성 (공통)
  - step: generate-marketing
    server: "@synthetic-ci/vibe-marketing"
    tool: "find-hooks"
    description: "매력적인 마케팅 콘텐츠 생성"
    input:
      platform: "@select-platform.output"
      category: "promotional"
      context: >-
        {{
          merge-instagram-context.output or merge-blog-context.output
        }}
      limit: 2

  # 5단계: 후처리
  - step: finalize
    type: branch
    description: "플랫폼별 최종 처리"
    branches:
      # Instagram 후처리
      - when: "select-platform.output == 'instagram'"
        steps:
          - step: post-to-instagram
            server: "@midwest/meta-post-scheduler-mcp"
            tool: "schedule_post"
            description: "인스타그램 자동 포스팅"
            input:
              url: "https://your-agent.com/instagram"
              method: "POST"
              body: "@generate-marketing.output"
              schedule_time: "optional"

      # Naver Blog 후처리
      - when: "select-platform.output == 'naver-blog'"
        steps:
          - step: prepare-blog-html
            type: transform
            description: "블로그용 HTML 변환"
            input: >
              {{
                "<h2>📣 블로그 제목 예시</h2>\n" +
                "<p>" + generate-marketing.output + "</p>\n\n" +
                "<p><strong>#AI #실시간번역기 #여행필수템</strong></p>"
              }}
              
          - step: show-blog-draft
            type: say
            description: "사용자에게 블로그 초안 제공"
            input: >
              아래 내용을 복사해서 네이버 블로그에 붙여넣어주세요 ✍️  
              ---  
              {{ prepare-blog-html.output }}

# MCP 서버 설정
mcp_servers:
  hashtag_generator:
    url: "https://smithery.ai/server/@HeurisTech/product-trends-mcp"
    tools:
      - "insta_hashtag_scraper"
    
  naver_search:
    url: "https://smithery.ai/server/@isnow890/naver-search-mcp"
    tools:
      - "get_related_keywords"
      - "search_trend"
    
  vibe_marketing:
    url: "https://smithery.ai/server/@synthetic-ci/vibe-marketing"
    tools:
      - "find-hooks"
      - "generate_content"
      - "get-network-categories-for-hooks"
      - "list-copywriting-frameworks"
      - "get-copywriting-framework"
      - "get-trending-content"
    
  meta_scheduler:
    url: "https://smithery.ai/server/@midwest/meta-post-scheduler-mcp"
    tools:
      - "schedule_post"
      - "post_now"

# 플랫폼별 최적화 설정
platform_configs:
  instagram:
    content_types:
      - "feed_post"
      - "story"
      - "reel"
      - "igtv"
    hashtag_limit: 30
    character_limit: 2200
    optimal_posting_times:
      weekdays: ["08:00-09:00", "12:00-13:00", "19:00-21:00"]
      weekends: ["10:00-11:00", "14:00-15:00", "20:00-22:00"]
    content_guidelines:
      - "시각적 임팩트 중요"
      - "첫 문장에 훅 포함"
      - "스토리텔링 활용"
      - "CTA 명확히 제시"

  naver_blog:
    content_types:
      - "review"
      - "information"
      - "tutorial"
      - "experience"
    keyword_density: "2-3%"
    min_content_length: 1000
    seo_requirements:
      - "제목에 키워드 포함"
      - "소제목 활용"
      - "이미지 ALT 텍스트"
      - "내부 링크 연결"
    content_guidelines:
      - "상세한 정보 제공"
      - "단계별 설명"
      - "실제 경험담 포함"
      - "검색 키워드 자연스럽게 배치"

# 성과 측정 설정
analytics:
  instagram:
    metrics:
      - "reach"
      - "impressions" 
      - "engagement_rate"
      - "profile_visits"
      - "website_clicks"
    reporting_schedule: "daily"
    
  naver_blog:
    metrics:
      - "page_views"
      - "search_impressions"
      - "click_through_rate"
      - "average_time_on_page"
      - "bounce_rate"
    reporting_schedule: "weekly"

# 자동화 규칙
automation_rules:
  content_generation:
    frequency: "on_demand"
    quality_check: true
    approval_required: false
    
  posting_schedule:
    auto_schedule: true
    optimal_timing: true
    timezone: "Asia/Seoul"
    
  performance_optimization:
    auto_adjust: true
    a_b_testing: true
    feedback_integration: true

# 에러 처리 및 복구
error_handling:
  retry_attempts: 3
  fallback_strategies:
    - "use_cached_content"
    - "manual_intervention"
    - "simplified_workflow"
  
  notifications:
    channels: ["email", "slack"]
    escalation_levels: ["warning", "error", "critical"]

# 보안 및 인증
security:
  api_keys:
    storage: "environment_variables"
    rotation_schedule: "monthly"
  
  access_control:
    role_based: true
    audit_logging: true
  
  data_privacy:
    user_data_retention: "30_days"
    anonymization: true
